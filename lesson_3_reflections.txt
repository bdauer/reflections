When would you want to use a remote repository rather than keeping all your work local?
      
	You would want to use a remote repository when collaborating with others or creating
    an open source project that you would like to share.

Why might you want to always pull changes manually rather than having
Git automatically stay up-to-date with your remote repository?

	You might be working on something that would be broken if Git pulled changes
	automatically. Your files might be changed without your knowledge, such that
	you wouldn't know what's included in the file most of the time. There may
	be changes to the public repository that you'd rather not include in your own version,
	and you'd prefer to create a new fork and exclude the changes to the public
	repository.

Describe the differences between forks, clones, and branches.
When would you use one instead of another?

	A branch is a separate local version of a project. A clone is a copy of a project that
	links back to its repository. A fork is a copy of a project that links to a new
	repository, separate from the original. Branches are useful when working on local
	projects. They allow you to make changes without introducing bugs to the master.
	Clones are useful for collaboration. You can make changes locally and then update
	or propose changes to the main repository. Forks are useful when you don't have
	permission to change the original repo or you would like your version of the
	project to behave differently than the original.
	
What is the benefit of having a copy of the last known state of the remote stored locally?

	You can treat the last known state of the remote as a vanilla version, comparing
	it to any changes that you might make. You can merge the vanilla version into yours
	in order to check for compatibility if changes have been made since you created
	your working branch. You can check the log locally to see what changes have been
	made by other people.